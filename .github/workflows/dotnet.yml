name: .NET

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  buildBadgeFilename: GeodesyBuildBadge.json
  buildBadgeGistId: a05c7c692c31842ce1e6e136b71654cc
  buildBadgeLabel: Build status
  testBadgeFilename: GeodesyTestBadge.json
  testBadgeGistId: bd26f1a5c130ac7204eb24395747732c
  
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      id: buildstep
      run: dotnet build --no-restore
      continue-on-error: true
      
    - name: Set success vars for build badge      
      if: steps.buildstep.conclusion == 'success'
      run: |
         echo "buildBadgeMessage=Success" >> $GITHUB_ENV
         echo "buildBadgeColour=Green" >> $GITHUB_ENV
         
    - name: Set fail vars for build badge      
      if: steps.buildstep.conclusion == 'failure'
      run: |
         echo "buildBadgeMessage=Failed" >> $GITHUB_ENV
         echo "buildBadgeColour=Red" >> $GITHUB_ENV      
          
    - name: Create build badge
      uses: schneegans/dynamic-badges-action@v1.0.0
      with:
        auth: ${{ secrets.GIST_SECRET }}
        gistID: ${{ env.buildBadgeGistId }}
        filename: ${{ env.buildBadgeFilename }}
        label: ${{ env.buildBadgeLabel }}
        message: ${{ env.buildBadgeMessage }}
        color: ${{ env.buildBadgeColour }}
    
    - name: Run tests
      id: test
      run: dotnet test --no-build --logger "trx;LogFileName=geodesy.trx
      
    - name: Upload dotnet test results
      uses: actions/upload-artifact@v2
      with:
        name: dotnet-results
        path: TestResults
        
    - name: Get test count
      id: testcount
      uses: QwerMike/xpath-action@v1
      with:
        filename: 'TestResults/geodesy.trx'
        expression: '/ns0:TestRun/ns0:ResultSummary/ns0:Counters/@total'
        namespaces: '{"ns0":"http://microsoft.com/schemas/VisualStudio/TeamTest/2010"}'
       
    - name: Get test passes
      id: testpasscount
      uses: QwerMike/xpath-action@v1
      with:
        filename: 'TestResults/geodesy.trx'
        expression: '/ns0:TestRun/ns0:ResultSummary/ns0:Counters/@passed'
        namespaces: '{"ns0":"http://microsoft.com/schemas/VisualStudio/TeamTest/2010"}'
        
    - name: Create test badge label
      run: echo "testBadgeLabel=Tests ${{ steps.testpasscount.result }}/${{ steps.testcount.result }}" >> $GITHUB_ENV
        
    - name: Set test badge success message  
      if: steps.testpasscount.result == steps.testcount.result
      run: |
         echo "testBadgeMessage=Success" >> $GITHUB_ENV
         echo "testBadgeColour=Green" >> $GITHUB_ENV
         
    - name: Set test badge success message  
      if: steps.testpasscount.result != steps.testcount.result
      run: |
         echo "testBadgeMessage=Failure" >> $GITHUB_ENV
         echo "testBadgeColour=Red" >> $GITHUB_ENV      
        
    - name: Create test badge
      uses: schneegans/dynamic-badges-action@v1.0.0
      with:
        auth: ${{ secrets.GIST_SECRET }}
        gistID: ${{ env.testBadgeGistId }}
        filename: ${{ env.testBadgeFilename }}
        label: ${{ env.testBadgeLabel }}
        message:  ${{ env.testBadgeMessage }}
        color: ${{ env.testBadgeColour }}
